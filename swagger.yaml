
openapi: 3.0.0

info:
  title: Mini Blog API Documentation
  description: API endpoints for a mini blog services documented on swagger
  contact:
    name: Fasil Valiyattil
    email: fasilvaliyattil843@gmail.com
    url: https://github.com/fasilv843/node-js-swagger
  version: 1.0.0

servers:
  - url: http://localhost:8080/
  - url: <live-link-if-available>

paths:
  /api/user/register:
    post:
      tags:
        - User Controller
      summary: Create a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - email
                - password
              properties:
                username:
                  type: string
                  default: johndoe
                email:
                  type: string
                  default: johndoe@mail.com
                password:
                  type: string
                  default: johnDoe20!@
      responses:
        201:
          description: Created
        409:
          description: Conflict
        404:
          description: Not Found
        500:
          description: Server Error

  /api/user/login:
    post:
      tags:
        - User Controller
      summary: Login as a User 
      description: Login
      requestBody: 
        required: true
        content:
          application/json:
            schema: 
              type: object
              required:
                - "username"
                - "password"
              properties:
                username:
                  type: string
                  default: johndoe
                password:
                  type: string
                  default: johndoeHel22 
      responses:
        201:
          description: A Json Array of names
        409:
          description: Conflict
        404:
          description: Not Found
        500:
          description: Server Error

  /api/user/verify: 
    post:
      tags:
        - User Controller
      summary: Verify a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
              properties:
                username:
                  type: string
                  default: johndoe
      responses:
        201:
          description: Created
        409:
          description: Conflict
        404:
          description: Not Found
        500:
          description: Server Error

  /api/user/{username}: 
    get:
      tags:
        - User Controller
      summary: Get a user by username
      parameters:
        - name: username
          in: path
          description: The username of the user
          required: true
          schema: {}
      responses:
        200:
          description: Fetched Successfully
        400:
          description: Bad Request
        404:
          description: Not Found
        500:
          description: Server Error

  /api/user/update:
    put:
      tags:
        - User Controller
      summary: Modify a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - userId
              properties:
                userId:
                  type: string
                  default: ''
                firstName:
                  type: string
                  default: ''
                lastName:
                  type: string
                  default: ''
      responses:
        200:
          description: Modified
        400:
          description: Bad Request
        404:
          description: Not Found
        500:
          description: Server Error

  /api/user/{userId}:
    delete:
      tags:
        - User Controller
      summary: Delete user by Id
      parameters:
        - name: userId
          in: path
          description: The unique Id of the user
          required: true
          schema: {}
      responses:
        200:
          description: Removed
        400:
          description: Bad request
        404:
          description: Not Found
        500:
          description: Server Error